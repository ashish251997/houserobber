/* algorithms
step1: Determine length.
step2: check the statement.
step3: return empty string is 0
step4: sort the array
step5: find minimum length among strings.
step6: state similar characters from first and last string.
step7: return the substring
step8: return sub
                  */
class Solution {
    public String longestCommonPrefix(String[] a) 
    {
        int size = a.length; 
        if (size == 0) 
            return ""; 
        if (size == 1) 
            return a[0];
        Arrays.sort(a); 
        int end = Math.min(a[0].length(), a[size-1].length()); 
           int i = 0; 
        while (i < end && a[0].charAt(i) == a[size-1].charAt(i) ) 
            i++; 
            String sub = a[0].substring(0, i); 
        return sub;
        }
}