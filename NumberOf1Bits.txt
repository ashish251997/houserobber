/*Algorithm
step1: Delcare n.
step2: intialize a to 1 and count to 0.
step3: Run the loop where i is 0 until i is less than 2.
step4: check the statment wheather the value of n & a is not 0.
step5: increment the count is the statment is true.
step6: lastly update a and return the value of count.
*/
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int a = 1;
        int count = 0;
        for(int i = 0;i < 32;i++)
        {
            if((n & a) != 0)
            {
                count ++;
            }
            a = (a << 1);
        }
        return count;
    }
}
/*space complexity=O(1)
  time complexity=O(n)*/